{"swagger": "2.0", "basePath": "/api/v1", "paths": {"/data/": {"get": {"responses": {"400": {"description": "Bad Request"}, "404": {"description": "Not Found"}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/DataList"}}}, "operationId": "get_data", "parameters": [{"name": "Authorization", "in": "header", "type": "string", "description": "Bearer JWT"}, {"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/ProjectId"}}], "security": [{"bearerAuth": []}], "tags": ["data"]}, "post": {"responses": {"400": {"description": "Bad Request"}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/Data"}}}, "operationId": "post_data", "parameters": [{"name": "Authorization", "in": "header", "type": "string", "description": "Bearer JWT"}, {"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/Data"}}], "security": [{"bearerAuth": []}], "tags": ["data"]}}, "/data/history": {"get": {"responses": {"400": {"description": "Bad Request"}, "404": {"description": "No data found"}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/DataList"}}}, "operationId": "get_data_history", "parameters": [{"name": "Authorization", "in": "header", "type": "string", "description": "Bearer JWT"}, {"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/ProjectIdDataId"}}], "security": [{"bearerAuth": []}], "tags": ["data"]}}, "/data/projects": {"get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/Projects"}}}, "operationId": "get_projects", "parameters": [{"name": "Authorization", "in": "header", "type": "string", "description": "Bearer JWT"}], "security": [{"bearerAuth": []}], "tags": ["data"]}, "post": {"responses": {"400": {"description": "Bad Request"}, "401": {"description": "Unauthorized"}, "200": {"description": "Success", "schema": {"$ref": "#/definitions/Project"}}}, "operationId": "post_projects", "parameters": [{"name": "Authorization", "in": "header", "type": "string", "description": "Bearer JWT"}, {"name": "payload", "required": true, "in": "body", "schema": {"$ref": "#/definitions/Project"}}], "security": [{"bearerAuth": []}], "tags": ["data"]}}, "/info/health": {"get": {"responses": {"500": {"description": "{'db' : False}"}, "200": {"description": "healthy", "schema": {"$ref": "#/definitions/Health"}}}, "operationId": "get_health", "tags": ["info"]}}, "/info/identity-provider": {"get": {"responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/IdentityProvider"}}}, "operationId": "get_identity_provider", "tags": ["info"]}}}, "info": {"title": "collectum", "version": "1.0", "description": "API for the collectum app"}, "produces": ["application/json"], "consumes": ["application/json"], "securityDefinitions": {"bearerAuth": {"type": "http", "scheme": "bearer", "bearerFormat": "Bearer JWT"}}, "tags": [{"name": "info", "description": "Open info Endpoints"}, {"name": "data", "description": "Private data endpoints"}], "definitions": {"Health": {"properties": {"message": {"type": "string", "description": "Health"}}, "type": "object"}, "IdentityProvider": {"required": ["base_url", "client_id", "realm"], "properties": {"client_id": {"type": "string", "description": "The Keycloak client_id"}, "base_url": {"type": "string", "description": "The Keycloak base_url"}, "realm": {"type": "string", "description": "The Keycloak realm"}}, "type": "object"}, "ProjectId": {"required": ["project_id"], "properties": {"project_id": {"type": "integer", "description": "Project id"}}, "type": "object"}, "Data": {"required": ["data", "data_id", "data_version", "project_id", "project_version", "timestamp", "user_id", "user_name"], "properties": {"id": {"type": "integer", "description": "Unique identifier"}, "timestamp": {"type": "string", "format": "date-time", "description": "Timestamp"}, "user_id": {"type": "string", "description": "User id"}, "user_name": {"type": "string", "description": "User name"}, "project_id": {"type": "integer", "description": "Project id"}, "project_version": {"type": "integer", "description": "Project version"}, "data_id": {"type": "integer", "description": "Data id"}, "data_version": {"type": "integer", "description": "Data version"}, "data": {"type": "object", "description": "JSON Data"}}, "type": "object"}, "DataList": {"properties": {"data": {"type": "array", "items": {"$ref": "#/definitions/Data"}}}, "type": "object"}, "ProjectIdDataId": {"required": ["data_id", "project_id"], "properties": {"project_id": {"type": "integer", "description": "Project id"}, "data_id": {"type": "integer", "description": "Data id"}}, "type": "object"}, "Project": {"required": ["name", "specification", "version"], "properties": {"id": {"type": "integer", "description": "Unique identifier"}, "name": {"type": "string", "description": "Project name"}, "description": {"type": "string", "description": "Project description"}, "version": {"type": "integer", "description": "Project version"}, "specification": {"type": "object", "description": "JSON Project specification"}}, "type": "object"}, "Projects": {"properties": {"projects": {"type": "array", "items": {"$ref": "#/definitions/Project"}}}, "type": "object"}}, "responses": {"ParseError": {"description": "When a mask can't be parsed"}, "MaskError": {"description": "When any error occurs on mask"}}, "host": "example.org"}
